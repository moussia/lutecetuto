/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.41
 * Generated at: 2020-12-07 16:22:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import fr.paris.lutece.util.sql.TransactionManager;
import fr.paris.lutece.portal.service.admin.PasswordResetException;
import fr.paris.lutece.portal.web.constants.Messages;
import fr.paris.lutece.portal.service.util.*;
import fr.paris.lutece.portal.service.message.AdminMessageService;
import fr.paris.lutece.portal.service.message.AdminMessage;
import fr.paris.lutece.portal.service.i18n.I18nService;

public final class ErrorPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


	private final static String JSP_URL_MODIFY_DEFAULT_USER_PASSWORD = "jsp/admin/user/ModifyDefaultUserPassword.jsp";

	private final static String PROPERTY_DEBUG = "error.page.debug";
	private final static String PROPERTY_DEBUG_DEFAULT = "true";
	private final static String PROPERTY_MESSAGE = "portal.util.error.page.message";
	private final static String PROPERTY_DETAIL = "portal.util.error.page.message.details";
	private final static String PROPERTY_CONTACT_ADMIN = "portal.util.error.page.message.contact_admin";
	private final static String PROPERTY_MESSAGE_SORRY = "portal.util.error.page.message.sorry";
	private final static String PROPERTY_MESSAGE_ERROR = "portal.util.error.page.message_error";
	private final static String PROPERTY_MESSAGE_STACK = "portal.util.error.page.message.stack_trace";
	private final static String PROPERTY_HOME = "portal.site.page_home.label";
	private final static String PROPERTY_SITE_MAP = "portal.site.site_map.pathLabel";
        private final static String PROPERTY_XPAGE_CONTACT = "portal.site.page_menu_tools.xpage.contact";
	private final static String PROPERTY_CREDITS = "portal.site.portal_footer.labelCredits";
	private final static String PROPERTY_WINDOW = "portal.site.portal_footer.newWindow";

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("fr.paris.lutece.portal.service.util");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("fr.paris.lutece.portal.service.message.AdminMessageService");
    _jspx_imports_classes.add("fr.paris.lutece.portal.service.message.AdminMessage");
    _jspx_imports_classes.add("fr.paris.lutece.portal.service.i18n.I18nService");
    _jspx_imports_classes.add("fr.paris.lutece.util.sql.TransactionManager");
    _jspx_imports_classes.add("fr.paris.lutece.portal.web.constants.Messages");
    _jspx_imports_classes.add("fr.paris.lutece.portal.service.admin.PasswordResetException");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    java.lang.Throwable exception = org.apache.jasper.runtime.JspRuntimeLibrary.getThrowable(request);
    if (exception != null) {
      response.setStatus(javax.servlet.http.HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
    }
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 1048576, false);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');
      out.write('\n');


	TransactionManager.rollBackEveryTransaction( exception );
    if( exception instanceof fr.paris.lutece.portal.service.admin.AccessDeniedException )
    {
    	if ( exception.getMessage(  ) != null )
    	{
    		AppLogService.error( "AccessDeniedException : " + exception.getMessage() );
    	}
        response.sendRedirect( AdminMessageService.getMessageUrl( request , Messages.USER_ACCESS_DENIED , AdminMessage.TYPE_STOP ) );
    }
    else if ( exception instanceof fr.paris.lutece.portal.service.admin.PasswordResetException )
    {
        String strRedirectUrl = AdminMessageService.getMessageUrl( request,
                Messages.MESSAGE_USER_MUST_CHANGE_PASSWORD, JSP_URL_MODIFY_DEFAULT_USER_PASSWORD,
                AdminMessage.TYPE_ERROR );
				response.sendRedirect( strRedirectUrl );
        //response.sendRedirect( AppPathService.getBaseUrl( request ) + JSP_URL_MODIFY_DEFAULT_USER_PASSWORD );
    }
    else
    {

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<base href=\"");
      out.print( AppPathService.getBaseUrl( request ) );
      out.write("/\" />\n");
      out.write("<!-- Set the viewport width to device width for mobile -->\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<!-- Le styles -->\n");
      out.write("<link href=\"css/admin/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("<link rel=\"stylesheet\" href=\"css/admin/portal_admin.css\" />\n");
      out.write("<!-- Le HTML5 shim, for IE6-8 support of HTML5 elements -->\n");
      out.write("<link href=\"css/admin/bootstrap-responsive.min.css\" rel=\"stylesheet\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<header>\n");
      out.write("    <div class=\"navbar navbar-inverse navbar-fixed-top\">\n");
      out.write("        <div class=\"navbar-inner\">\n");
      out.write("            <a href=\"jsp/site/Portal.jsp\" title=\"#i18n{portal.users.admin_header.title.viewSite} ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${site_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" target=\"_blank\" class=\"brand\">\n");
      out.write("                &nbsp;<img class=\"logo\" src=\"images/logo-header.png\" title=\"#i18n{portal.users.admin_header.title.viewSite} ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${site_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"  alt=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${site_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("                \n");
      out.write("            </a>\n");
      out.write("            \n");
      out.write("        </div> <!-- /navbar-inner -->\n");
      out.write("    </div>\n");
      out.write("    <h1 class=\"header\"><a name=\"top\">&nbsp;</a></h1>\n");
      out.write("</header>\n");
      out.write("<div class=\"container-fluid\">\n");
      out.write("<!-- container -->\n");
      out.write("\t<div class=\"row-fluid\">\n");
      out.write("\t\t<div class=\"span12\">\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t\t<br>\n");
      out.write("\t\t\t<div class=\"alert alert-error\">\n");
      out.write("\t\t\t<h3>Internal error</h3>\n");
      out.write("\t\t\t");

			if ( exception instanceof AppException )
			{
			    //AppException calls AppLogService.error( message, this ) in the
			    //constructor, so don't call it here again Call toString to have
			    //the Class and the message to be able to indentify the correct
			    //stacktrace in the preceding logs.
			    AppLogService.error( "Error 500 : Caused by previous Critical AppException" );
			}
			else
			{
			    AppLogService.error( exception.getMessage(  ), exception );
			}
			if( AppPropertiesService.getProperty( PROPERTY_DEBUG , PROPERTY_DEBUG_DEFAULT ).equalsIgnoreCase( "true" ))
			{
			
      out.write("\n");
      out.write("\t\t\t<p class=\"lead\">\n");
      out.write("\t\t\t\t<i class=\"icon-ban-circle icon-white\"></i>&nbsp;\n");
      out.write("\t\t\t\t");

				String strErrorMessage = (exception.getMessage() != null ) ? exception.getMessage() : exception.toString();
				
      out.write("\n");
      out.write("\t\t\t</p>\n");
      out.write("\t\t\t<p>\n");
      out.write("\t\t\t\t<a class=\"btn btn-danger\" id=\"btnStack\">\n");
      out.write("\t\t\t\t");
      out.print( I18nService.getLocalizedString(PROPERTY_DETAIL, request.getLocale() ) );
      out.write("\n");
      out.write("\t\t\t\t</a>\n");
      out.write("\t\t\t</p>\n");
      out.write("\t\t\t<pre id=\"stackMsg\">\n");
      out.write("\t\t\t\t");

				java.io.CharArrayWriter cw = new java.io.CharArrayWriter();
				java.io.PrintWriter pw = new java.io.PrintWriter(cw,true);
				exception.printStackTrace(pw);
				out.println(cw.toString());
				
      out.write("\n");
      out.write("\t\t\t</pre>\n");
      out.write("\t\t\t<p>\n");
      out.write("\t\t\t\t<a class=\"btn btn-danger\" href=\"jsp/site/Portal.jsp\">\n");
      out.write("\t\t\t\t\t<i class=\"icon-home icon-white\"></i>&nbsp;Accueil du site\n");
      out.write("\t\t\t\t</a>\n");
      out.write("\t\t\t</p>\n");
      out.write("\t\t\t");

				
				} else {
			
      out.write("\n");
      out.write("\t\t\t<p>\n");
      out.write("\t\t\t\t<i class=\"icon-warning-sign\"></i>\n");
      out.write("\t\t\t\t&nbsp;");
      out.print( I18nService.getLocalizedString(PROPERTY_MESSAGE, request.getLocale() ) );
      out.write("\n");
      out.write("\t\t\t</p>\n");
      out.write("\t\t\t<p>\n");
      out.write("\t\t\t\t<a class=\"btn btn-danger\" href=\"");
      out.print( AppPathService.getAdminMenuUrl() );
      out.write("\">\n");
      out.write("\t\t\t\t\t<i class=\"icon-home icon-white\"></i>&nbsp;Accueil de l'administration du site\n");
      out.write("\t\t\t\t</a>\n");
      out.write("\t\t\t</p>\n");
      out.write("\t\t\t");

				}
				} // end else access denied
			
      out.write("\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\t</div>\n");
      out.write("<!-- end container -->\n");
      out.write("</div>\n");
      out.write("<!-- footer menu -->\n");
      out.write("<footer>\n");
      out.write("<div id=\"footer\" class=\"navbar navbar-fixed-bottom  hidden-phone\">\n");
      out.write("\t<div class=\"pull-right\">\n");
      out.write("\t\t<a href=\"http://fr.lutece.paris.fr\" target=\"lutece\" title=\"#i18n{portal.site.portal_footer.labelPortal}\">\n");
      out.write("\t\t\t<img src=\"images/poweredby.png\" alt=\"#i18n{portal.site.portal_footer.labelMadeBy}\" />\n");
      out.write("\t\t\t<small>version ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${version}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</small>\n");
      out.write("\t\t</a>\n");
      out.write("\t</div>\n");
      out.write("</div>\n");
      out.write("</footer>\n");
      out.write("<!-- Included JS Files -->\n");
      out.write("<!-- Le javascript\n");
      out.write("    ================================================== -->\n");
      out.write("<!-- Placed at the end of the document so the pages load faster -->\n");
      out.write("<script src=\"js/jquery/jquery.min.js\"></script>\n");
      out.write("<script src=\"js/bootstrap.min.js\"></script>\n");
      out.write("<script>\n");
      out.write("$(document).ready(function(e){\n");
      out.write("\t$('#stackMsg').toggle();\n");
      out.write("\t$(\"#btnStack\").click( function(e){\n");
      out.write("\t\t$('#stackMsg').toggle();\n");
      out.write("\t});\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
